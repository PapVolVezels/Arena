   //BTMacro's
#define QUEUEMOTORX 1
#define QUEUEMOTORY 2
#define QUEUEPRESSURE 3
#define QUEUECOMMAND 4
#define CONNECTION 0											//Connectie van slave naar master is altijd 0

//MOTOR+SENSOR Macro's
#define MOTORX OUT_A											//Vul hier de gebruikte poorten in
#define MOTORY OUT_B
#define SENSORTOUCH SENSOR_1

//Globale Variablen
int commandnumber;
int resetcommand;

//Connectiestatus
void CheckConnection()
	{
		if (BluetoothStatus(CONNECTION) != NO_ERR)
			{
				TextOut(5,LCD_LINE2,"Bluetoetoetoeter!");
				Wait(1000);
				StopAllTasks();
			}
	}

//Klemmotor
	void MotorX()											//Ontvang de verzochte snelheid voor de klemmotor (MotorX)
		{
			char error;
			int vel;									//"vel" en "value" betekenen hetzelfde als bij master
			while(true)
				{
					error = ReceiveRemoteNumber(QUEUEMOTORX, true, vel);
					if(error == NULL)
						{
							OnFwd(MOTORX, vel);
							break;
						}
					else Wait(10);
				}
		}

//Gripmotor
	void MotorY()											//Ontvang de verzochte snelheid voor de klemmotor (MotorY)
		{
			char error;
			int vel;									//"vel" en "value" betekenen hetzelfde als bij master
			while(true)
				{
					error = ReceiveRemoteNumber(QUEUEMOTORY, true, vel);
					if(error == NULL)
						{
							OnFwd(MOTORY, vel);
							break;
						}
					else Wait(10);
				}
		}

//Druksensor
	void DrukSensor()										//Stuur de waarde van Druksensor
		{
			int value;
			value = SENSORTOUCH;
			SendResponseNumber(QUEUEPRESSURE, value);
		}

//MiscCommando's
	void Command1()
		{
			/*Schrijf hier een functie die je wil laten uitvoeren*/
		}

	void GetCommand()
		{
      char error;
      error = ReceiveRemoteNumber(QUEUECOMMAND, true, commandnumber);
      while(true)
      {
      if (error == NULL)
      {
	     if (commandnumber == 0)resetcommand = 0;
       if (commandnumber > 0)resetcommand = 1;
			 if (commandnumber == 1 && resetcommand == 0)Command1();
			 break;
			}
			Wait(10);
			}
		}

task main();
{
 SetSensorTouch(S1);
 CheckConnection();
 while(true)
 {
  MotorX();
  MotorY();
  DrukSensor();
  GetCommand();
 }
}
