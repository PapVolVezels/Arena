/*Dit programma is gemaakt zonder compiler, en waarschijnlijk vol met bugs!!!*/

//BLUETOOTH
#define CONNECTION 1
#define QUEUEMOTORX 1
#define QUEUEMOTORY 2
#define QUEUEPRESSURE 3
#define QUEUECOMMAND 4

//POORTEN
#define MOTORX OUT_A
#define MOTORY OUT_B
#define SENSORPRESSURE SENSOR_1

//Variable's voor commando's ontvangen
int commandnumber;
int resetcommand;

//Klemmotor
	sub MotorX()
		{
			int vel;
			ReceiveRemoteNumber(QUEUEMOTORX, true, vel);
			OnFwd(MOTORX, vel);
		}

//Gripmotor
	sub MotorY()
		{
			int vel;
			ReceiveRemoteNumber(QUEUEMOTORY, true, vel);
			OnFwd(MOTORY, vel);
		}

//Druksensor
	sub DrukSensor()
		{
			int value;
			value = SENSORPRESSURE;
			SendResponseNumber(QUEUEPRESSURE, value);
		}
		
//MiscCommando's
	sub GetCommand()
		{
			ReceiveRemoteNumber(QUEUECOMMAND, true, commandnumber);
			if (commandnumber > 0){resetcommand = 1;}
			if (commandnumber == 0){resetcommand = 0;}
			if (commandnumber == 1 && resetcommand == 0){sub Command1();}
		}
	sub Command1()
		{
			/*Schrijf hier een functie die je wil laten uitvoeren*/
		}
		
task main()
	{
		SetSensorTouch(S1);
		while(true)
			{
				if (BluetoothStatus(CONNECTION) != NO_ERR)
					{
						TextOut(5,LCD_LINE2,"Bluetoetoetoeter!");
						Wait(1000);
						Stop(true);
    					}
				sub MotorY();
				sub MotorX();
				sub Druksensor();
				sub GetCommand();
			}
	}
