/*Dit is een file voor alle voids, ints en macro's voor de communicatie tussen de stenen.
 *KopiÃ«er deze modules aan het begin van het programma. Je kunt daarna de functies gebruiken in het programma.
 *Zo roep je een sub op:
 *	"sub naam(optionele waarde);"
 *Zo roep je een int op:
 *	"naam(optionele waarde);"
 *Bij sommige functies kun je een of meerde waardes invoeren.
 *Alleen sub MotorX en sub MotorY werken met waardes, je voert de snelheid in die je wilt.
 *Je kunt ints gebruiken als een waarde.
 */

//SLAVE&&MASTER

//Macro's voor connectie
#define CONNECTION 1											//Vervang met de connectie die je instelt
#define QUEUEMOTORX 1
#define QUEUEMOTORY 2
#define QUEUEPRESSURE 3
#define QUEUECOMMAND 4

//Connectiestatus
if (BluetoothStatus(CONNECTIE) != NO_ERR)
	{
		TextOut(5,LCD_LINE2,"Bluetoetoetoeter!");
		Wait(1000);
		Stop(true);
	}

//MASTER

//Klemmotor												//Stel de klemmotor (MotorX) in op de snelheid waarde vel
	sub MotorX (vel)										//"vel" staat voor de opgegeven snelheid
		{
			SendRemoteNumber(CONNECTION, QUEUEMOTORX, vel);
		}

//Gripmotor												//Stel de gripmotor (MotorY) in op snelheid waarde vel
	sub MotorY (vel)
		{
			SendRemoteNumber(CONNECTION, QUEUEMOTORY, vel);
		}

//Druksensor												//Lees de waarde van de Druksensor uit
	int DrukSensor ()
		{
			int value;									//"value" staat voor de sensor waarde
			ReceiveRemotenumber(QUEUEPRESSURE, true, value);
			Return value;
		}

//SLAVE

#define MOTORX OUT_A											//Vul hier de gebruikte poorten in
#define MOTORY OUT_B
#define SENSORPRESSURE SENSOR_1
SetSensorTouch(S1);
int command;
int resetcommand;

//Klemmotor
	sub MotorX()											//Ontvang de verzochte snelheid voor de klemmotor (MotorX)
		{
			int vel;									//"vel" en "value" betekenen hetzelfde als bij master
			ReceiveRemoteNumber(QUEUEMOTORX, true, vel);
			OnFwd(MOTORX, vel);
		}
	
//Gripmotor
	sub MotorY()											//Ontvang de verzochte snelheid voor de klemmotor (MotorY)
		{
			int vel;
			ReceiveRemoteNumber(QUEUEMOTORY, true, vel);
			OnFwd(MOTORY, vel);
		}

//Druksensor
	sub DrukSensor()										//Stuur de waarde van Druksensor
		{
			int value;
			value = SENSORPRESSURE;
			SendResponseNumber(QUEUEPRESSURE, value);
		}






